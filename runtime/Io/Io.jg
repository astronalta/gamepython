# Copyright (c) 2010 Matt Fichman
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, APEXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

println(str String) {
    # Prints 'str' to standard output, and flushes the output.
    if str {
        stdout().println(str)
    } else {
        stdout().println('nil')
    }
}

print(str String) {
    # Prints 'str' to standard output.  Does not flush the output.
    if str {
        stdout().print(str)
    } else {
        stdout().print('nil')
    }
}

scanln() String {
    # Scans all input up to the end of the line.  Reads the end-of-line
    # character, but doesn't return it.
    ret stdin().scanln()
}

scan(str String) String {
    # Scans for the delimiter specified by 'str' and returns all input up to
    # the delimiter.
    ret stdin().scan(str)
}

stderr() native Stream {
    # Returns the standard error stream
}

stdout() native Stream {
    # Returns the standard output stream
}

stdin() native Stream {
    # Returns the standard input stream
}

manager() native Manager {
    # Returns the default Io::Manager
}
