# Copyright (c) 2010 Matt Fichman
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, APEXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

ArgType = FLAG, VALUE

Arg < Value {
    type ArgType
    value String

    @init(ptype ArgType, pvalue String) {
        type = ptype;
        value = pvalue;
    }
}

Parser < Object {
    args Array[String] 

    @init(pargs Array[String]) {
        args = pargs
    }

    next_arg() Arg {
    } 

    next_flag() Tac::String {
        arg = nex_arg()
        if arg.type != ArgType::FLAG {
            Io::stderr().println("error: invalid argument")
            Os::exit(1)
        }
        ret arg.value
    }

    next_value() Tac::String {
        arg = next_arg()
        if arg.type != ArgType::VALUE {
            Io::stderr().println("error: invalid argument")
            Os::exit(1)
        }
        ret arg.value 
    }
}
