Module
  name: 
  feature0: Class
    name: Conditional
    comment:
    feature0: Function
      name: conditional1
      type: Int
      comment:
      formal0: Formal
        name: self
        type: Self
      block: Block
        child0: Conditional
          guard: BooleanLiteral(1)
          true: Block
            child0: Return
              expression: IntegerLiteral(1)
          false: Block
            child0: Return
              expression: IntegerLiteral(0)
    feature1: Function
      name: conditional2
      type: Int
      comment:
      formal0: Formal
        name: self
        type: Self
      block: Block
        child0: Conditional
          guard: BooleanLiteral(1)
          true: Block
            child0: Return
              expression: IntegerLiteral(1)
          false: Conditional
            guard: BooleanLiteral(0)
            true: Block
              child0: Return
                expression: IntegerLiteral(2)
            false: Block
              child0: Return
                expression: IntegerLiteral(3)
    feature2: Function
      name: conditional3
      type: Int
      comment:
      formal0: Formal
        name: self
        type: Self
      block: Block
        child0: Conditional
          guard: BooleanLiteral(1)
          true: Block
            child0: Return
              expression: IntegerLiteral(1)
          false: Block
            child0: Conditional
              guard: BooleanLiteral(1)
              true: Block
                child0: Return
                  expression: IntegerLiteral(2)
              false: Conditional
                guard: BooleanLiteral(0)
                true: Block
                  child0: Return
                    expression: IntegerLiteral(4)
                false: Block
                  child0: Return
                    expression: IntegerLiteral(6)
Conditional__conditional1:
    t1 <- poparg {}
    if not '1' goto l2 {}
l1:
    pushret '1' {}
    ret {}
l2:
    pushret '0' {}
    ret {}
l3:
Conditional__conditional2:
    t1 <- poparg {}
    if not '1' goto l5 {}
l4:
    pushret '1' {}
    ret {}
l5:
    if not '0' goto l7 {}
l6:
    pushret '2' {}
    ret {}
l7:
    pushret '3' {}
    ret {}
l8:
l9:
Conditional__conditional3:
    t1 <- poparg {}
    if not '1' goto l11 {}
l10:
    pushret '1' {}
    ret {}
l11:
    if not '1' goto l13 {}
l12:
    pushret '2' {}
    ret {}
l13:
    if not '0' goto l15 {}
l14:
    pushret '4' {}
    ret {}
l15:
    pushret '6' {}
    ret {}
l16:
l17:
l18:

