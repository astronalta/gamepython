# jgtest exec on

Mesh < Object {
    val = 1
}

Material < Object {
    val = 2
}

Particles < Object {
    val = 3
}

Quads < Object {
    val = 4
}

Render < Functor {
    var = 99

    @case(obj Mesh) {
        Io::println("Mesh #{obj.val}")
    }

    @case(obj Material) {
        Io::println("Material #{obj.val}")
    } 

    @case(obj Particles) {
        Io::println("Particles #{obj.val}")
    }
}

Render < Functor {
    # Functors are open classes that can be extended with new cases easily
    @case(obj Quads) {
        Io::println("Quads #{obj.val} #{var}")
    }
}

main() Int {
    render = Render()
    obj1 = Mesh()
    obj2 = Material()
    obj3 = Particles()
    obj4 = Quads()

    render(obj1)
    render(obj2)
    render(obj3)
    render(obj4)
    render("bob")
    
    ret 0
}

