# jgtest print_ast on

CycleType1 < Interface {
    check1() CycleType2
}

CycleType2 < Interface {
    check1() CycleType1
}


TypeChecker < Object {
    @index(x CycleType2, y CycleType2) {
    }

    check1() Int {
        ret 2
    }

    check2(bob Int) {
    }

    main() {
        t = TypeChecker()
        t.check2(t.check1())
        a = t.check1()
        b = a + 10

        c CycleType1
        d CycleType2
        c = d
        d = c

        t[c, d]

        e Bool
        if e and not e {
        }
        else if e or e {
        }
        else {
        }

        while e and b {
        }
    }
}
