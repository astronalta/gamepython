# jgtest exec on

split() {

    for token in '/foo/bar/baz'.split('/'b) {
        Io::println("!#{token}")
    }
    for token in 'baz'.split('/'b) {
        Io::println("!#{token}")
    }
    for token in ''.split('/'b) {
        Io::println("!#{token}")
    }
    for token in '/foo'.split('/'b) {
        Io::println("!#{token}")
    }
    for token in 'bat/'.split('/'b) {
        Io::println("!#{token}")
    }

}

main() Int {
    stdout = Io::stdout()
    
    for char in 'the quick brown fox jumps over the lazy dog\n' {
        stdout.put(char)
    } 

    the = 'the'
    jumps = 'jumps'

    stdout.print("#{the} quick brown fox #{jumps} over #{the} lazy dog\n")
    stdout.print("#{1} one #{2} two #{3} three\n")

    stdout.print("#{"hello".starts_with('hel')}\n")
    stdout.print("#{"hello".starts_with('hello2')}\n")
    stdout.print("#{"hello".ends_with('llo')}\n")
    stdout.print("#{"hello".ends_with('2hello')}\n")
    stdout.flush()

    split()

    ret 0
}
