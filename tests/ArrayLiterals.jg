# jgtest exec on

Intf < Interface {
    test()
}

ArrayLike < Object {
    append(str String) {
        Io::println(str)
    }
}

One < Object {
    test() {}
}

Two < Object {
    test() {}
}

print(arr Array[String]) {
    for x in arr {
        Io::println(x)
    }
}

main() Int {
    list = ["1", "2", "3", "4"]
    for x in list {
        Io::println(x)
    } 

    list = Array[String](0) #[]
    for x in list {
        Io::println(x)
    } 

    list = ["a", "b"]+["c", "d"]
    for x in list {
        Io::println(x)
    }
    print(["hello"]+["world"])

#    ar ArrayLike = [
#        "alpha", 
#        "beta", 
#        "gamma",
#    ]  

    #ar2 Array[Intf] = [ One(), Two() ]

    ret 0
}
