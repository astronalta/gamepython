Callable < Interface {
    @call()
}

Test < Object {
    test(f Callable) {
        f()
    }
}

test(f Callable) {
    f()
}

main() Int {

    hello = 'hello world'

    sample = func(x Int) {
        Io::print(x.str)
        Io::println(hello)
    }

    sample(10)

    test(func() {
        Io::print("one")
        Io::println(hello)
    })
    test() func() {
        Io::print("two")
        Io::println(hello)
    }

    obj = Test()
    obj.test(func() {
        Io::print("three")
        Io::println(hello)
    })

    obj.test() func() {
        Io::print("four")
        Io::println(hello)
    }

    sample2 = func() {
        Io::println(hello.str)
    }
    sample2()

    ret 0
}
