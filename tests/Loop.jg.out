Module
  name: 
  feature0: Class
    name: IteratorTest
    comment:
    feature0: Function
      name: next
      type: String
      comment:
      formal0: Formal
        name: self
        type: IteratorTest
      block: Block
        child0: Return
          expression: StringLiteral
            value: Hello, world
    feature1: Function
      name: more?
      type: Bool
      comment:
      formal0: Formal
        name: self
        type: IteratorTest
      block: Block
        child0: Return
          expression: BooleanLiteral(1)
    feature2: Function
      name: @destroy
      type: Void
      formal0: Formal
        name: self
        type: IteratorTest
      block: Block
    feature3: Function
      name: @init
      type: Void
      block: Block
  feature1: Class
    name: IterableTest
    comment:
    feature0: Function
      name: iter
      type: IteratorTest
      comment:
      formal0: Formal
        name: self
        type: IterableTest
      block: Block
        child0: Return
          expression: Construct
            type: IteratorTest
    feature1: Function
      name: @destroy
      type: Void
      formal0: Formal
        name: self
        type: IterableTest
      block: Block
    feature2: Function
      name: @init
      type: Void
      block: Block
  feature2: Function
    name: test
    type: Void
    comment:
    formal0: Formal
      name: var
      type: String
    block: Block
  feature3: Class
    name: Loop
    comment:
    feature0: Function
      name: loop1
      type: Void
      comment:
      formal0: Formal
        name: self
        type: Loop
      block: Block
        child0: Let
          variable0: Assignment
            name: _i
            type: IteratorTest
            declared: <<top>>
            initializer: Call
              expression: Member
                identifier: iter
                expression: Construct
                  type: IterableTest
              argument0: Construct
                type: IterableTest
          block: While
            guard: Call
              expression: Member
                identifier: more?
                expression: Identifier
                  name: _i
              argument0: Identifier
                name: _i
            block: Block
              child0: Let
                variable0: Assignment
                  name: i
                  type: String
                  declared: <<top>>
                  initializer: Call
                    expression: Member
                      identifier: next
                      expression: Identifier
                        name: _i
                    argument0: Identifier
                      name: _i
                block: Block
                  child0: Statement
                    expression: Call
                      expression: Identifier
                        name: test
                      argument0: Identifier
                        name: i
    feature1: Function
      name: loop2
      type: Void
      comment:
      formal0: Formal
        name: self
        type: Loop
      block: Block
        child0: While
          guard: BooleanLiteral(1)
          block: Block
    feature2: Function
      name: @destroy
      type: Void
      formal0: Formal
        name: self
        type: Loop
      block: Block
    feature3: Function
      name: @init
      type: Void
      block: Block
