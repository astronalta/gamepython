# jgtest exec on

TestComp1 < Object {
    var1 Int = 42
    share Int 

    @init() {
        Io::println("TestComp1()")
    }

    test1() String {
        ret "hello\n"
    }
}

TestComp2 < Object {
    var2 Int = 99
    share Int

    test2() String {
        ret "goodbye\n"
    }
}

TestClass < Object {
    TestComp1
    TestComp2
}

TestInterface < Interface {
    test1() String
    test2() String
}

main() Int {
    obj = TestClass()
    Io::print(obj.test1())
    Io::print(obj.test2())
    Io::println(obj.var1.str)
    Io::println(obj.var2.str)
    obj.hash.str

    intf TestInterface = TestClass()
    Io::print(intf.test1())
    Io::print(intf.test2())
    Io::stdout().flush()
    ret 0 
}
