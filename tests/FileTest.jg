# jgtest exec on

import Array

main() Int {
    # Write a message to standard output
    stdout = Io::stdout()
    stdout.print('hello world\n')

    # Read in a message from a file using scan()
    file = File::open('FileTest.txt', 'r')
    if not file.error {
        hello = file.scan('\n')
        stdout.print("#{hello}\n")    
        while file.status != Io::StreamStatus::EOF {
            if file.peek() != '\r'b {
                stdout.put('*'b)
                stdout.put(file.get())
            } else {
                file.get()
            }
            file.peek()
        }
    } else {
        Io::println(Os::strerror(file.error))
    }

    array = Array[String](10)
    array[1] = "bob"
    array[90] = "bill"
    array.push("bilbo")

    stdout.print(array[1])
    stdout.print(array[90])
    stdout.print(array.last)
    stdout.print(array.pop())

    stdout.put('c'b)
    stdout.put('h'b)
    stdout.put('a'b)
    stdout.put('r'b)
    stdout.print('\n')

#    stdout.flush()
#    stdin = Stream(0)
#    msg = stdin.scan('\n')
#    stdout.print(msg)
    
    stdout.put('\x48'b)
    stdout.put('\x45'b)
    stdout.put('\x4c'b)
    stdout.put('\x4C'b)
    stdout.put('\x4f'b)
    stdout.put('\x0A'b)

    stdout.put('\150'b)
    stdout.put('\145'b)
    stdout.put('\154'b)
    stdout.put('\154'b)
    stdout.put('\157'b)
    stdout.put('\012'b)

    stdout.put('\r'b)
    stdout.put('\t'b)
    stdout.put('\n'b)
    stdout.put('\\'b)
    stdout.flush()
    
    ret 0
}
