# jgtest exec on

import Array

main() Int {
    # Write a message to standard output
    stdout = Io::stdout()
    stdout.print('hello world\n')

    # Read in a message from a file using scan()
    file = File::open('FileTest.txt', 'r')
    if not file.error {
        hello = file.scan('\n')
        stdout.print("#{hello}\n")    
        while file.peekc() != eof {
            if file.peekc() != '\r'c {
                stdout.putc('*'c)
                stdout.putc(file.getc())
            } else {
                file.getc()
            }
        }
    } else {
        Io::println(Os::strerror(file.error))
    }

    array = Array[String](10)
    array[1] = "bob"
    array[90] = "bill"
    array.push("bilbo")

    stdout.print(array[1])
    stdout.print(array[90])
    stdout.print(array.last)
    stdout.print(array.pop())

    stdout.putc('c'c)
    stdout.putc('h'c)
    stdout.putc('a'c)
    stdout.putc('r'c)
    stdout.print('\n')

#    stdout.flush()
#    stdin = Stream(0)
#    msg = stdin.scan('\n')
#    stdout.print(msg)
    
    stdout.putc('\x48'c)
    stdout.putc('\x45'c)
    stdout.putc('\x4c'c)
    stdout.putc('\x4C'c)
    stdout.putc('\x4f'c)
    stdout.putc('\x0A'c)

    stdout.putc('\150'c)
    stdout.putc('\145'c)
    stdout.putc('\154'c)
    stdout.putc('\154'c)
    stdout.putc('\157'c)
    stdout.putc('\012'c)

    stdout.putc('\r'c)
    stdout.putc('\t'c)
    stdout.putc('\n'c)
    stdout.putc('\\'c)
    stdout.flush()
    
    ret 0
}
