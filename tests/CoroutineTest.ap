# aptest exec on

import Coroutine

countdown(num Int) {
    if num != 0 {
        countdown(num-1)
    }
}

main() Int {

    coroutine = Coroutine() func() {
        i = 0
    
        nested = Coroutine() func() {
            countdown(40960) # Check to make sure the stack grows
            Boot::print_str('hello ')
            yield
            Boot::print_str('world\n')
        }
        nested()
        nested()
        nested()
        nested()

        while true {
            str = String()
            i = i + 1
            Boot::print_int(i)
            Boot::print_str('\n')
            yield
        }
       
    }
    coroutine()
    coroutine()
    coroutine()
    coroutine()
    coroutine()
    coroutine()
    coroutine()
    coroutine()
    
    ret 0
}
