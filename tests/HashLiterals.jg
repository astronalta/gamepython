# jgtest exec on

Intf < Interface {
    x() String {
    } 
}

One < Object {
    x() String { 
        ret "Hello"
    }
}

Two < Object {
    x() String {
        ret "Goodbye"
    }
}

HashLike < Object {
    @insert(key String, val String) {
        Io::println("#{key} => #{val}")
    }
}

main() Int {
    hash = { 'a': 'one', 'b': 'two' }
    for pair in hash {
        Io::println("#{pair.first} => #{pair.second}")
    }

    hash = Hash[String,String]()
    for pair in hash {
        Io::println("#{pair.first} => #{pair.second}")
    }

    hash2 Hash[String,Intf] = { 'a': One(), 'b': Two() }
    for pair in hash2 {
        Io::println("#{pair.first} => #{pair.second.x()}")
    }

    hash3 HashLike = { '1': 'Spock', '2': 'Kirk', '3': 'Picard' }
    ret 0
}
