/* 
 * Network socket support.  This class represents a socket that can send and
 * receive data using TCP (connection-oriented) or UDP (connection-less).
 */
class Net::Socket;

public static uint TCP=1;
public static uint UDP=2;

IO::Handle handle;

/* 
 * Creates a new socket endpoint for communication.  The type is either 
 * Socket::TCP or Socket::UDP.
 */
@init(uint type) native;

/* Returns the IO handle associated with this socket */
handle() IO::Handle;

/* Binds this socket to the given address */
bind!(Address address) native int;

/* Puts the socket into the listening state */
listen!() native int;

/* Waits for an incoming connection, and then returns the associated socket */
accept!() native Socket;

/* Connects this socket to the given address */
connect!(Address address) native int;

/* 
 * Sends a buffer.  Usually used for connection-less sockets.  This method
 * will attempt to send all bytes in the valid range of the 'buffer' field of
 * the packet, and returns the number of bytes successfully sent.
 */
send!(Packet packet) native;

/* 
 * Receives a buffer.  Usually used for connection-oriented sockets.  This
 * method will fail if the number of bytes in the valid range of 'buffer'
 * is too few to hold the incoming data.
 */
receive!(Packet packet) native;

